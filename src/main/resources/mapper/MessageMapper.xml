<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eussi.blog.modules.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="com.eussi.blog.modules.po.Message">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="event" jdbcType="INTEGER" property="event" />
    <result column="from_id" jdbcType="INTEGER" property="fromId" />
    <result column="own_id" jdbcType="INTEGER" property="ownId" />
    <result column="post_id" jdbcType="INTEGER" property="postId" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, created, event, from_id, own_id, post_id, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.eussi.blog.modules.po.Message">
    insert into blog_message (id, created, event, 
      from_id, own_id, post_id, 
      status)
    values (#{id,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP}, #{event,jdbcType=INTEGER}, 
      #{fromId,jdbcType=INTEGER}, #{ownId,jdbcType=INTEGER}, #{postId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.eussi.blog.modules.po.Message">
    insert into blog_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="event != null">
        event,
      </if>
      <if test="fromId != null">
        from_id,
      </if>
      <if test="ownId != null">
        own_id,
      </if>
      <if test="postId != null">
        post_id,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="event != null">
        #{event,jdbcType=INTEGER},
      </if>
      <if test="fromId != null">
        #{fromId,jdbcType=INTEGER},
      </if>
      <if test="ownId != null">
        #{ownId,jdbcType=INTEGER},
      </if>
      <if test="postId != null">
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.eussi.blog.modules.po.Message">
    update blog_message
    <set>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="event != null">
        event = #{event,jdbcType=INTEGER},
      </if>
      <if test="fromId != null">
        from_id = #{fromId,jdbcType=INTEGER},
      </if>
      <if test="ownId != null">
        own_id = #{ownId,jdbcType=INTEGER},
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eussi.blog.modules.po.Message">
    update blog_message
    set created = #{created,jdbcType=TIMESTAMP},
      event = #{event,jdbcType=INTEGER},
      from_id = #{fromId,jdbcType=INTEGER},
      own_id = #{ownId,jdbcType=INTEGER},
      post_id = #{postId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="countByOwnIdAndUnread" parameterType="com.eussi.blog.modules.po.Message" resultType="java.lang.Integer">
        select
        count(*)
        from blog_message
        where own_id = #{ownId,jdbcType=INTEGER}
        <if test="status != null">
            and status = #{status,jdbcType=INTEGER}
        </if>
    </select>
</mapper>