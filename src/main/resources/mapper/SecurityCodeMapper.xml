<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eussi.blog.modules.dao.SecurityCodeMapper">
  <resultMap id="BaseResultMap" type="com.eussi.blog.modules.po.SecurityCode">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="expired" jdbcType="TIMESTAMP" property="expired" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="target" jdbcType="VARCHAR" property="target" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, code, created, expired, status, target, type, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog_security_code
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog_security_code
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.eussi.blog.modules.po.SecurityCode">
    insert into blog_security_code (id, code, created, 
      expired, status, target, 
      type, user_id)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, 
      #{expired,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{target,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.eussi.blog.modules.po.SecurityCode">
    insert into blog_security_code
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="expired != null">
        expired,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="target != null">
        target,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="expired != null">
        #{expired,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="target != null">
        #{target,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.eussi.blog.modules.po.SecurityCode">
    update blog_security_code
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="expired != null">
        expired = #{expired,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="target != null">
        target = #{target,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eussi.blog.modules.po.SecurityCode">
    update blog_security_code
    set code = #{code,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      expired = #{expired,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      target = #{target,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>