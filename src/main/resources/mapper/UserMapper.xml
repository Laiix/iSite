<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eussi.blog.modules.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.eussi.blog.modules.po.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="last_login" jdbcType="TIMESTAMP" property="lastLogin" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="comments" jdbcType="INTEGER" property="comments" />
    <result column="posts" jdbcType="INTEGER" property="posts" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, name, avatar, email, password, status, created, updated, last_login, 
    gender, role_id, comments, posts, signature
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.eussi.blog.modules.po.User">
    insert into blog_user (id, username, name, 
      avatar, email, password, 
      status, created, updated, 
      last_login, gender, role_id, 
      comments, posts, signature
      )
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, 
      #{lastLogin,jdbcType=TIMESTAMP}, #{gender,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{comments,jdbcType=INTEGER}, #{posts,jdbcType=INTEGER}, #{signature,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.eussi.blog.modules.po.User">
    insert into blog_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="lastLogin != null">
        last_login,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="comments != null">
        comments,
      </if>
      <if test="posts != null">
        posts,
      </if>
      <if test="signature != null">
        signature,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLogin != null">
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=INTEGER},
      </if>
      <if test="posts != null">
        #{posts,jdbcType=INTEGER},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.eussi.blog.modules.po.User">
    update blog_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=INTEGER},
      </if>
      <if test="posts != null">
        posts = #{posts,jdbcType=INTEGER},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eussi.blog.modules.po.User">
    update blog_user
    set username = #{username,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      gender = #{gender,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      comments = #{comments,jdbcType=INTEGER},
      posts = #{posts,jdbcType=INTEGER},
      signature = #{signature,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="findByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from blog_user
        where username = #{username,jdbcType=VARCHAR}
    </select>
    <update id="updateUserPosts" parameterType="com.eussi.blog.modules.po.User">
        update blog_user
        set
          posts = posts + ${steps}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>